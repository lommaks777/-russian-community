// –û–±–æ–≥–∞—â–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –º–µ—Å—Ç–∞—Ö —Å –ø–æ–º–æ—â—å—é Google Places API
// –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è, —Ä–µ–π—Ç–∏–Ω–≥–∏, –æ—Ç–∑—ã–≤—ã –∏ –¥—Ä—É–≥—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
import fs from 'fs';
import path from 'path';
import fetch from 'node-fetch';

const ROOT = process.cwd();
const PLACES_FILE = path.join(ROOT, 'data', 'places.js');
const ENRICHED_PLACES_FILE = path.join(ROOT, 'data', 'places_enriched.js');

const GOOGLE_KEY = "AIzaSyB7-RgotVuWFR6qMvr_Alf8nQvkYd7I3WI";

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–µ—Å—Ç–µ
async function getPlaceDetails(placeId) {
  try {
    const url = `https://maps.googleapis.com/maps/api/place/details/json?place_id=${placeId}&fields=name,rating,user_ratings_total,reviews,editorial_summary,formatted_address,formatted_phone_number,website,opening_hours,price_level,types,photos&key=${GOOGLE_KEY}`;
    
    const response = await fetch(url);
    const data = await response.json();
    
    if (data.status === 'OK' && data.result) {
      return data.result;
    }
    
    return null;
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è ${placeId}: ${error.message}`);
    return null;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –º–µ—Å—Ç–∞
async function getPlacePhotos(placeId) {
  try {
    const url = `https://maps.googleapis.com/maps/api/place/details/json?place_id=${placeId}&fields=photos&key=${GOOGLE_KEY}`;
    
    const response = await fetch(url);
    const data = await response.json();
    
    if (data.status === 'OK' && data.result && data.result.photos) {
      return data.result.photos.slice(0, 3); // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 3 —Ñ–æ—Ç–æ
    }
    
    return [];
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ –¥–ª—è ${placeId}: ${error.message}`);
    return [];
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–≤–µ–∑–¥–Ω–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞
function generateStars(rating) {
  if (!rating) return '';
  
  const fullStars = Math.floor(rating);
  const hasHalfStar = rating % 1 >= 0.5;
  const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
  
  let stars = '‚òÖ'.repeat(fullStars);
  if (hasHalfStar) stars += '‚òÜ';
  stars += '‚òÜ'.repeat(emptyStars);
  
  return stars;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –º–µ—Å—Ç–∞
function getPlaceType(types) {
  if (!types || !Array.isArray(types)) return '–ú–µ—Å—Ç–æ';
  
  const typeMap = {
    'restaurant': '–†–µ—Å—Ç–æ—Ä–∞–Ω',
    'food': '–ï–¥–∞',
    'bar': '–ë–∞—Ä',
    'cafe': '–ö–∞—Ñ–µ',
    'bakery': '–ü–µ–∫–∞—Ä–Ω—è',
    'store': '–ú–∞–≥–∞–∑–∏–Ω',
    'shopping_mall': '–¢–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä',
    'gym': '–°–ø–æ—Ä—Ç–∑–∞–ª',
    'spa': '–°–ø–∞',
    'beauty_salon': '–°–∞–ª–æ–Ω –∫—Ä–∞—Å–æ—Ç—ã',
    'hospital': '–ë–æ–ª—å–Ω–∏—Ü–∞',
    'pharmacy': '–ê–ø—Ç–µ–∫–∞',
    'bank': '–ë–∞–Ω–∫',
    'atm': '–ë–∞–Ω–∫–æ–º–∞—Ç',
    'gas_station': '–ó–∞–ø—Ä–∞–≤–∫–∞',
    'parking': '–ü–∞—Ä–∫–æ–≤–∫–∞',
    'subway_station': '–°—Ç–∞–Ω—Ü–∏—è –º–µ—Ç—Ä–æ',
    'bus_station': '–ê–≤—Ç–æ–±—É—Å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞',
    'airport': '–ê—ç—Ä–æ–ø–æ—Ä—Ç',
    'hotel': '–û—Ç–µ–ª—å',
    'tourist_attraction': '–î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
    'museum': '–ú—É–∑–µ–π',
    'library': '–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞',
    'school': '–®–∫–æ–ª–∞',
    'university': '–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç',
    'church': '–¶–µ—Ä–∫–æ–≤—å',
    'mosque': '–ú–µ—á–µ—Ç—å',
    'synagogue': '–°–∏–Ω–∞–≥–æ–≥–∞',
    'hindu_temple': '–•—Ä–∞–º',
    'cemetery': '–ö–ª–∞–¥–±–∏—â–µ',
    'park': '–ü–∞—Ä–∫',
    'zoo': '–ó–æ–æ–ø–∞—Ä–∫',
    'aquarium': '–ê–∫–≤–∞—Ä–∏—É–º',
    'amusement_park': '–ü–∞—Ä–∫ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π',
    'movie_theater': '–ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä',
    'theater': '–¢–µ–∞—Ç—Ä',
    'night_club': '–ù–æ—á–Ω–æ–π –∫–ª—É–±',
    'casino': '–ö–∞–∑–∏–Ω–æ',
    'bowling_alley': '–ë–æ—É–ª–∏–Ω–≥',
    'pool': '–ë–∞—Å—Å–µ–π–Ω',
    'golf_course': '–ì–æ–ª—å—Ñ-–∫–ª—É–±',
    'stadium': '–°—Ç–∞–¥–∏–æ–Ω',
    'gym': '–°–ø–æ—Ä—Ç–∑–∞–ª',
    'yoga': '–ô–æ–≥–∞',
    'dance': '–¢–∞–Ω—Ü—ã',
    'music': '–ú—É–∑—ã–∫–∞',
    'art_gallery': '–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –≥–∞–ª–µ—Ä–µ—è',
    'book_store': '–ö–Ω–∏–∂–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω',
    'clothing_store': '–û–¥–µ–∂–¥–∞',
    'shoe_store': '–û–±—É–≤—å',
    'jewelry_store': '–Æ–≤–µ–ª–∏—Ä–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω',
    'electronics_store': '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞',
    'furniture_store': '–ú–µ–±–µ–ª—å',
    'home_goods_store': '–¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–∞',
    'hardware_store': '–•–æ–∑—Ç–æ–≤–∞—Ä—ã',
    'pet_store': '–ó–æ–æ–º–∞–≥–∞–∑–∏–Ω',
    'florist': '–¶–≤–µ—Ç–æ—á–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω',
    'laundry': '–ü—Ä–∞—á–µ—á–Ω–∞—è',
    'dry_cleaning': '–•–∏–º—á–∏—Å—Ç–∫–∞',
    'car_repair': '–ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å',
    'car_wash': '–ê–≤—Ç–æ–º–æ–π–∫–∞',
    'car_rental': '–ê—Ä–µ–Ω–¥–∞ –∞–≤—Ç–æ',
    'bicycle_store': '–í–µ–ª–æ—Å–∏–ø–µ–¥–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω',
    'travel_agency': '–¢—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–æ',
    'real_estate_agency': '–ê–≥–µ–Ω—Ç—Å—Ç–≤–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏',
    'insurance_agency': '–°—Ç—Ä–∞—Ö–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è',
    'accounting': '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è',
    'lawyer': '–Æ—Ä–∏—Å—Ç',
    'dentist': '–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥',
    'doctor': '–í—Ä–∞—á',
    'veterinary_care': '–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä',
    'funeral_home': '–ü–æ—Ö–æ—Ä–æ–Ω–Ω–æ–µ –±—é—Ä–æ',
    'embassy': '–ü–æ—Å–æ–ª—å—Å—Ç–≤–æ',
    'local_government_office': '–ì–æ—Å—É—á—Ä–µ–∂–¥–µ–Ω–∏–µ',
    'post_office': '–ü–æ—á—Ç–∞',
    'police': '–ü–æ–ª–∏—Ü–∏—è',
    'fire_station': '–ü–æ–∂–∞—Ä–Ω–∞—è —á–∞—Å—Ç—å',
    'courthouse': '–°—É–¥',
    'city_hall': '–†–∞—Ç—É—à–∞',
    'library': '–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞',
    'school': '–®–∫–æ–ª–∞',
    'university': '–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç',
    'hospital': '–ë–æ–ª—å–Ω–∏—Ü–∞',
    'pharmacy': '–ê–ø—Ç–µ–∫–∞',
    'dentist': '–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥',
    'doctor': '–í—Ä–∞—á',
    'veterinary_care': '–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä',
    'beauty_salon': '–°–∞–ª–æ–Ω –∫—Ä–∞—Å–æ—Ç—ã',
    'spa': '–°–ø–∞',
    'gym': '–°–ø–æ—Ä—Ç–∑–∞–ª',
    'yoga': '–ô–æ–≥–∞',
    'dance': '–¢–∞–Ω—Ü—ã',
    'music': '–ú—É–∑—ã–∫–∞',
    'art_gallery': '–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –≥–∞–ª–µ—Ä–µ—è',
    'museum': '–ú—É–∑–µ–π',
    'tourist_attraction': '–î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
    'park': '–ü–∞—Ä–∫',
    'zoo': '–ó–æ–æ–ø–∞—Ä–∫',
    'aquarium': '–ê–∫–≤–∞—Ä–∏—É–º',
    'amusement_park': '–ü–∞—Ä–∫ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π',
    'movie_theater': '–ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä',
    'theater': '–¢–µ–∞—Ç—Ä',
    'night_club': '–ù–æ—á–Ω–æ–π –∫–ª—É–±',
    'casino': '–ö–∞–∑–∏–Ω–æ',
    'bowling_alley': '–ë–æ—É–ª–∏–Ω–≥',
    'pool': '–ë–∞—Å—Å–µ–π–Ω',
    'golf_course': '–ì–æ–ª—å—Ñ-–∫–ª—É–±',
    'stadium': '–°—Ç–∞–¥–∏–æ–Ω',
    'gym': '–°–ø–æ—Ä—Ç–∑–∞–ª',
    'yoga': '–ô–æ–≥–∞',
    'dance': '–¢–∞–Ω—Ü—ã',
    'music': '–ú—É–∑—ã–∫–∞',
    'art_gallery': '–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –≥–∞–ª–µ—Ä–µ—è',
    'book_store': '–ö–Ω–∏–∂–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω',
    'clothing_store': '–û–¥–µ–∂–¥–∞',
    'shoe_store': '–û–±—É–≤—å',
    'jewelry_store': '–Æ–≤–µ–ª–∏—Ä–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω',
    'electronics_store': '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞',
    'furniture_store': '–ú–µ–±–µ–ª—å',
    'home_goods_store': '–¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–∞',
    'hardware_store': '–•–æ–∑—Ç–æ–≤–∞—Ä—ã',
    'pet_store': '–ó–æ–æ–º–∞–≥–∞–∑–∏–Ω',
    'florist': '–¶–≤–µ—Ç–æ—á–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω',
    'laundry': '–ü—Ä–∞—á–µ—á–Ω–∞—è',
    'dry_cleaning': '–•–∏–º—á–∏—Å—Ç–∫–∞',
    'car_repair': '–ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å',
    'car_wash': '–ê–≤—Ç–æ–º–æ–π–∫–∞',
    'car_rental': '–ê—Ä–µ–Ω–¥–∞ –∞–≤—Ç–æ',
    'bicycle_store': '–í–µ–ª–æ—Å–∏–ø–µ–¥–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω',
    'travel_agency': '–¢—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–æ',
    'real_estate_agency': '–ê–≥–µ–Ω—Ç—Å—Ç–≤–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏',
    'insurance_agency': '–°—Ç—Ä–∞—Ö–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è',
    'accounting': '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è',
    'lawyer': '–Æ—Ä–∏—Å—Ç',
    'dentist': '–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥',
    'doctor': '–í—Ä–∞—á',
    'veterinary_care': '–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä',
    'funeral_home': '–ü–æ—Ö–æ—Ä–æ–Ω–Ω–æ–µ –±—é—Ä–æ',
    'embassy': '–ü–æ—Å–æ–ª—å—Å—Ç–≤–æ',
    'local_government_office': '–ì–æ—Å—É—á—Ä–µ–∂–¥–µ–Ω–∏–µ',
    'post_office': '–ü–æ—á—Ç–∞',
    'police': '–ü–æ–ª–∏—Ü–∏—è',
    'fire_station': '–ü–æ–∂–∞—Ä–Ω–∞—è —á–∞—Å—Ç—å',
    'courthouse': '–°—É–¥',
    'city_hall': '–†–∞—Ç—É—à–∞'
  };
  
  for (const type of types) {
    if (typeMap[type]) {
      return typeMap[type];
    }
  }
  
  return '–ú–µ—Å—Ç–æ';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–æ–≥–∞—â–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –º–µ—Å—Ç–µ
async function enrichPlace(place) {
  console.log(`üîç –û–±–æ–≥–∞—â–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è: ${place.name}`);
  
  if (!place.place_id) {
    console.log(`  ‚ö†Ô∏è –ù–µ—Ç place_id –¥–ª—è ${place.name}`);
    return place;
  }
  
  const details = await getPlaceDetails(place.place_id);
  if (!details) {
    console.log(`  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è ${place.name}`);
    return place;
  }
  
  // –û–±–æ–≥–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  const enriched = {
    ...place,
    // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    name: details.name || place.name,
    address: details.formatted_address || place.address,
    phone: details.formatted_phone_number || place.phone,
    website: details.website || place.website,
    
    // –†–µ–π—Ç–∏–Ω–≥ –∏ –æ—Ç–∑—ã–≤—ã
    rating: details.rating || null,
    user_ratings_total: details.user_ratings_total || 0,
    stars: generateStars(details.rating),
    
    // –û–ø–∏—Å–∞–Ω–∏–µ
    description: details.editorial_summary?.overview || '',
    short_description: details.editorial_summary?.summary || '',
    
    // –¢–∏–ø –º–µ—Å—Ç–∞
    place_type: getPlaceType(details.types),
    types: details.types || [],
    
    // –¶–µ–Ω–æ–≤–æ–π —É—Ä–æ–≤–µ–Ω—å
    price_level: details.price_level || null,
    price_text: details.price_level ? 
      ['–ë–µ—Å–ø–ª–∞—Ç–Ω–æ', '–ù–µ–¥–æ—Ä–æ–≥–æ', '–£–º–µ—Ä–µ–Ω–Ω–æ', '–î–æ—Ä–æ–≥–æ', '–û—á–µ–Ω—å –¥–æ—Ä–æ–≥–æ'][details.price_level] : 
      '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
    
    // –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã
    opening_hours: details.opening_hours?.weekday_text || [],
    is_open_now: details.opening_hours?.open_now || null,
    
    // –û—Ç–∑—ã–≤—ã
    reviews: details.reviews ? details.reviews.slice(0, 3).map(review => ({
      author: review.author_name,
      rating: review.rating,
      text: review.text,
      time: review.time
    })) : [],
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ
    photos: details.photos ? details.photos.slice(0, 3).map(photo => ({
      reference: photo.photo_reference,
      url: `https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=${photo.photo_reference}&key=${GOOGLE_KEY}`
    })) : [],
    
    // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    last_updated: new Date().toISOString(),
    enriched: true
  };
  
  console.log(`  ‚úÖ –û–±–æ–≥–∞—â–µ–Ω–æ: ${enriched.name} (${enriched.rating ? enriched.rating + '‚òÖ' : '–ù–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞'})`);
  
  return enriched;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–æ–≥–∞—â–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –º–µ—Å—Ç–∞—Ö...');
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
  if (!fs.existsSync(PLACES_FILE)) {
    console.log('‚ùå –§–∞–π–ª places.js –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  const placesContent = fs.readFileSync(PLACES_FILE, 'utf8');
  const placesMatch = placesContent.match(/window\.PLACES\s*=\s*(\[.*?\]);/s);
  
  if (!placesMatch) {
    console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –¥–∞–Ω–Ω—ã–µ –∏–∑ places.js');
    return;
  }
  
  const places = JSON.parse(placesMatch[1]);
  console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –º–µ—Å—Ç: ${places.length}`);
  
  const enrichedPlaces = [];
  
  // –û–±–æ–≥–∞—â–∞–µ–º –∫–∞–∂–¥–æ–µ –º–µ—Å—Ç–æ
  for (let i = 0; i < places.length; i++) {
    const place = places[i];
    console.log(`\nüìç [${i + 1}/${places.length}] –û–±—Ä–∞–±–æ—Ç–∫–∞: ${place.name}`);
    
    try {
      const enriched = await enrichPlace(place);
      enrichedPlaces.push(enriched);
      
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
      await new Promise(resolve => setTimeout(resolve, 100));
      
    } catch (error) {
      console.log(`  ‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ ${place.name}: ${error.message}`);
      enrichedPlaces.push(place); // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ
    }
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–æ–≥–∞—â–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  const enrichedContent = `window.PLACES = ${JSON.stringify(enrichedPlaces, null, 2)};`;
  fs.writeFileSync(ENRICHED_PLACES_FILE, enrichedContent);
  
  console.log(`\n‚úÖ –û–±–æ–≥–∞—â–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!`);
  console.log(`üìÅ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤: ${ENRICHED_PLACES_FILE}`);
  
  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  const withRating = enrichedPlaces.filter(p => p.rating).length;
  const withDescription = enrichedPlaces.filter(p => p.description).length;
  const withReviews = enrichedPlaces.filter(p => p.reviews && p.reviews.length > 0).length;
  
  console.log(`\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–æ–≥–∞—â–µ–Ω–∏—è:`);
  console.log(`  –° —Ä–µ–π—Ç–∏–Ω–≥–æ–º: ${withRating}/${enrichedPlaces.length}`);
  console.log(`  –° –æ–ø–∏—Å–∞–Ω–∏–µ–º: ${withDescription}/${enrichedPlaces.length}`);
  console.log(`  –° –æ—Ç–∑—ã–≤–∞–º–∏: ${withReviews}/${enrichedPlaces.length}`);
  
  console.log(`\nüéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±–æ–≥–∞—â–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.`);
}

// –ó–∞–ø—É—Å–∫
main().catch(error => {
  console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  process.exit(1);
});

