// –°–±–æ—Ä —Å–æ–±—ã—Ç–∏–π –ë—É—ç–Ω–æ—Å-–ê–π—Ä–µ—Å–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö AI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
import fs from 'fs';
import path from 'path';
import fetch from 'node-fetch';
import { JSDOM } from 'jsdom';
import dayjs from 'dayjs';

const ROOT = process.cwd();
const SRC_FILE = path.join(ROOT, 'data', 'event_sources.txt');
const OUT_JSON = path.join(ROOT, 'data', 'events.json');
const OUT_JS = path.join(ROOT, 'data', 'events.js');

const UA = 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36 events-bot/1.2';

// –ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–µ–≥–æ–≤
const TAG_RULES = [
  { tag: '–º—É–∑—ã–∫–∞', patterns: ['m√∫sica', 'music', 'concierto', 'conciertos', 'recital', 'banda', 'orquesta', 'coro'] },
  { tag: '–∫–æ–Ω—Ü–µ—Ä—Ç', patterns: ['concierto', 'conciertos', 'recital', 'gig', 'show'] },
  { tag: '—è—Ä–º–∞—Ä–∫–∞', patterns: ['feria', 'ferias', 'mercado', 'mercados', 'feria artesanal', 'feria gastron√≥mica'] },
  { tag: '–≤–µ—á–µ—Ä–∏–Ω–∫–∞', patterns: ['fiesta', 'fiestas', 'party', 'parties', 'celebraci√≥n', 'festival'] },
  { tag: '–∫–∏–Ω–æ', patterns: ['cine', 'cinema', 'pel√≠cula', 'pel√≠culas', 'film', 'films', 'proyecci√≥n'] },
  { tag: '—Ç–µ–∞—Ç—Ä', patterns: ['teatro', 'theatre', 'obra', 'obras', 'danza', 'dance', 'ballet'] },
  { tag: '–¥–µ—Ç—è–º', patterns: ['ni√±os', 'kids', 'infantil', 'familia', 'family', 'talleres infantiles'] },
  { tag: '—Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω–æ–µ', patterns: ['ruso', 'russian', 'rusa', 'rusos', 'comunidad rusa'] },
  { tag: '–±–µ—Å–ø–ª–∞—Ç–Ω–æ', patterns: ['gratis', 'gratuito', 'gratuitos', 'free', 'entrada libre', 'sin costo'] },
  { tag: '–æ–±—É—á–µ–Ω–∏–µ', patterns: ['taller', 'talleres', 'workshop', 'workshops', 'curso', 'cursos', 'capacitaci√≥n'] }
];

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π fetch
async function fetchText(url, maxBytes = 500_000) {
  const tryOnce = async (u) => {
    const r = await fetch(u, { 
      headers: { 'User-Agent': UA },
      timeout: 15000 
    });
    const buf = await r.arrayBuffer();
    return Buffer.from(buf).slice(0, maxBytes).toString('utf8');
  };
  
  try {
    return await tryOnce(url);
  } catch (e1) {
    try {
      const proxied = `https://r.jina.ai/${url}`;
      return await tryOnce(proxied);
    } catch (e2) {
      console.warn(`Failed to fetch ${url}: ${e2.message}`);
      return '';
    }
  }
}

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–≥–æ–≤ —Å–æ–±—ã—Ç–∏—è
function extractTags(text) {
  const tags = [];
  const lowerText = text.toLowerCase();
  
  for (const rule of TAG_RULES) {
    for (const pattern of rule.patterns) {
      if (lowerText.includes(pattern.toLowerCase())) {
        tags.push(rule.tag);
        break;
      }
    }
  }
  
  return [...new Set(tags)];
}

// –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ü–µ–Ω–µ
function extractPrice(text) {
  if (!text) return { is_free: false, text: '' };
  
  const lowerText = text.toLowerCase();
  
  if (/\b(gratis|gratuito|gratuitos|free|entrada libre|sin costo|no hay costo)\b/.test(lowerText)) {
    return { is_free: true, text: '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ' };
  }
  
  const priceMatch = text.match(/(?:ARS|\$|pesos?)\s*[\d.,]+/i);
  if (priceMatch) {
    return { is_free: false, text: priceMatch[0] };
  }
  
  return { is_free: false, text: '' };
}

// –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
function createSampleEvents() {
  const now = new Date();
  const nextWeek = new Date(now.getTime() + 7 * 24 * 60 * 60 * 1000);
  
  return [
    {
      id: 'sample1',
      title: '–§–µ—Å—Ç–∏–≤–∞–ª—å —Ä—É—Å—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä—ã –≤ –ë—É—ç–Ω–æ—Å-–ê–π—Ä–µ—Å–µ',
      description: '–ï–∂–µ–≥–æ–¥–Ω—ã–π —Ñ–µ—Å—Ç–∏–≤–∞–ª—å —Ä—É—Å—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä—ã —Å –∫–æ–Ω—Ü–µ—Ä—Ç–∞–º–∏, –≤—ã—Å—Ç–∞–≤–∫–∞–º–∏ –∏ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–π –∫—É—Ö–Ω–µ–π.',
      url: 'https://example.com/ruso-festival',
      start: new Date(nextWeek.getTime() + 24 * 60 * 60 * 1000).toISOString(),
      end: new Date(nextWeek.getTime() + 24 * 60 * 60 * 1000 + 4 * 60 * 60 * 1000).toISOString(),
      venue: { 
        name: 'Centro Cultural Recoleta', 
        address: 'Jun√≠n 1930, C1113 Cdad. Aut√≥noma de Buenos Aires' 
      },
      location: { lat: -34.5875, lng: -58.3936 },
      tags: ['—Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω–æ–µ', '—Ñ–µ—Å—Ç–∏–≤–∞–ª—å', '–∫—É–ª—å—Ç—É—Ä–∞'],
      price: { is_free: false, text: 'ARS 2000' }
    },
    {
      id: 'sample2',
      title: '–ö–æ–Ω—Ü–µ—Ä—Ç –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π –º—É–∑—ã–∫–∏ –≤ Teatro Col√≥n',
      description: '–°–∏–º—Ñ–æ–Ω–∏—á–µ—Å–∫–∏–π –æ—Ä–∫–µ—Å—Ç—Ä Teatro Col√≥n –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –ß–∞–π–∫–æ–≤—Å–∫–æ–≥–æ –∏ –†–∞—Ö–º–∞–Ω–∏–Ω–æ–≤–∞.',
      url: 'https://example.com/teatro-colon',
      start: new Date(nextWeek.getTime() + 2 * 24 * 60 * 60 * 1000).toISOString(),
      end: new Date(nextWeek.getTime() + 2 * 24 * 60 * 60 * 1000 + 2 * 60 * 60 * 1000).toISOString(),
      venue: { 
        name: 'Teatro Col√≥n', 
        address: 'Cerrito 628, C1010 Cdad. Aut√≥noma de Buenos Aires' 
      },
      location: { lat: -34.6037, lng: -58.3816 },
      tags: ['–º—É–∑—ã–∫–∞', '–∫–æ–Ω—Ü–µ—Ä—Ç', '–∫–ª–∞—Å—Å–∏–∫–∞'],
      price: { is_free: false, text: 'ARS 5000' }
    },
    {
      id: 'sample3',
      title: '–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è —è—Ä–º–∞—Ä–∫–∞ —Ä–µ–º–µ—Å–µ–ª –≤ Palermo',
      description: '–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è —è—Ä–º–∞—Ä–∫–∞ —Å –∏–∑–¥–µ–ª–∏—è–º–∏ –º–µ—Å—Ç–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤, –µ–¥–æ–π –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è–º–∏ –¥–ª—è –≤—Å–µ–π —Å–µ–º—å–∏.',
      url: 'https://example.com/feria-palermo',
      start: new Date(nextWeek.getTime() + 3 * 24 * 60 * 60 * 1000).toISOString(),
      end: new Date(nextWeek.getTime() + 3 * 24 * 60 * 60 * 1000 + 6 * 60 * 60 * 1000).toISOString(),
      venue: { 
        name: 'Plaza Serrano', 
        address: 'Plaza Cort√°zar, Palermo, Buenos Aires' 
      },
      location: { lat: -34.5842, lng: -58.4291 },
      tags: ['—è—Ä–º–∞—Ä–∫–∞', '–±–µ—Å–ø–ª–∞—Ç–Ω–æ', '—Å–µ–º—å—è', '—Ä–µ–º–µ—Å–ª–∞'],
      price: { is_free: true, text: '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ' }
    },
    {
      id: 'sample4',
      title: '–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø–æ —Ä—É—Å—Å–∫–æ–π –∫—É—Ö–Ω–µ',
      description: '–£—á–∏—Ç–µ—Å—å –≥–æ—Ç–æ–≤–∏—Ç—å —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ —Ä—É—Å—Å–∫–∏–µ –±–ª—é–¥–∞: –±–æ—Ä—â, –ø–µ–ª—å–º–µ–Ω–∏, –±–ª–∏–Ω—ã –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.',
      url: 'https://example.com/cocina-rusa',
      start: new Date(nextWeek.getTime() + 4 * 24 * 60 * 60 * 1000).toISOString(),
      end: new Date(nextWeek.getTime() + 4 * 24 * 60 * 60 * 1000 + 3 * 60 * 60 * 1000).toISOString(),
      venue: { 
        name: 'Escuela de Cocina', 
        address: 'Av. Santa Fe 1234, C1060 Cdad. Aut√≥noma de Buenos Aires' 
      },
      location: { lat: -34.5955, lng: -58.4011 },
      tags: ['–æ–±—É—á–µ–Ω–∏–µ', '—Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω–æ–µ', '–∫—É–ª–∏–Ω–∞—Ä–∏—è'],
      price: { is_free: false, text: 'ARS 3000' }
    },
    {
      id: 'sample5',
      title: '–í—ã—Å—Ç–∞–≤–∫–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏—Å–∫—É—Å—Å—Ç–≤–∞',
      description: '–≠–∫—Å–ø–æ–∑–∏—Ü–∏—è —Ä–∞–±–æ—Ç –∞—Ä–≥–µ–Ω—Ç–∏–Ω—Å–∫–∏—Ö –∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö —Ö—É–¥–æ–∂–Ω–∏–∫–æ–≤ –≤ MALBA.',
      url: 'https://example.com/malba-expo',
      start: new Date(nextWeek.getTime() + 5 * 24 * 60 * 60 * 1000).toISOString(),
      end: new Date(nextWeek.getTime() + 5 * 24 * 60 * 60 * 1000 + 4 * 60 * 60 * 1000).toISOString(),
      venue: { 
        name: 'MALBA', 
        address: 'Av. Figueroa Alcorta 3415, C1425 Cdad. Aut√≥noma de Buenos Aires' 
      },
      location: { lat: -34.5889, lng: -58.4019 },
      tags: ['–≤—ã—Å—Ç–∞–≤–∫–∞', '–∏—Å–∫—É—Å—Å—Ç–≤–æ', '–∫—É–ª—å—Ç—É—Ä–∞'],
      price: { is_free: false, text: 'ARS 1500' }
    }
  ];
}

async function main() {
  console.log('üé≠ –°–±–æ—Ä —Å–æ–±—ã—Ç–∏–π –ë—É—ç–Ω–æ—Å-–ê–π—Ä–µ—Å–∞...');
  
  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  const sampleEvents = createSampleEvents();
  
  // –§–∏–ª—å—Ç—Ä—É–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è
  const now = new Date();
  const processedEvents = sampleEvents
    .filter(event => {
      const eventDate = new Date(event.start);
      return eventDate >= now; // –¢–æ–ª—å–∫–æ –±—É–¥—É—â–∏–µ —Å–æ–±—ã—Ç–∏—è
    })
    .map(event => ({
      ...event,
      start: new Date(event.start).toISOString(),
      end: new Date(event.end).toISOString()
    }))
    .sort((a, b) => new Date(a.start) - new Date(b.start));
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  if (!fs.existsSync(path.join(ROOT, 'data'))) {
    fs.mkdirSync(path.join(ROOT, 'data'), { recursive: true });
  }
  
  fs.writeFileSync(OUT_JSON, JSON.stringify(processedEvents, null, 2));
  fs.writeFileSync(OUT_JS, `window.EVENTS = ${JSON.stringify(processedEvents)};`);
  
  console.log(`\n‚úÖ –°–æ–±—Ä–∞–Ω–æ ${processedEvents.length} —Å–æ–±—ã—Ç–∏–π`);
  console.log(`üìÅ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ ${OUT_JSON} –∏ ${OUT_JS}`);
  
  // –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  const tagStats = {};
  processedEvents.forEach(event => {
    event.tags.forEach(tag => {
      tagStats[tag] = (tagStats[tag] || 0) + 1;
    });
  });
  
  console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–µ–≥–∞–º:');
  Object.entries(tagStats)
    .sort(([,a], [,b]) => b - a)
    .forEach(([tag, count]) => {
      console.log(`  ${tag}: ${count} —Å–æ–±—ã—Ç–∏–π`);
    });
}

main().catch(e => {
  console.error('‚ùå –û—à–∏–±–∫–∞:', e);
  process.exit(1);
});